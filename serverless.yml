# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: graphqltest # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs6.10
  region: eu-west-1
  stage: dev
  environment:
    CASE_TABLE: ${self:service}-cases-${opt:stage, self:provider.stage}
    BASKET_TABLE: ${self:service}-basket-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: {"arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.CASE_TABLE}",
                 "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.BASKET_TABLE}"}

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
   
functions:  
  apollo-handler:
    handler: src/schema/apollo-handler.apollo
    events:
        - http:
            path: graphql
            method: post
  graphiql-handler:
    handler: src/schema/apollo-graphiql.graphiql
    events:
        - http:
            path: graphiql
            method: get

resources:
  Resources:
    CasesDynamoDbTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:       
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH  
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.CASE_TABLE}
    BasketDynamoDbTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:       
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH  
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.BASKET_TABLE}